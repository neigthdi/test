import{_ as a,c as e,o as t,a4 as r}from"./chunks/framework.De32BR7G.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"webgl/dataType.md","filePath":"webgl/dataType.md"}'),i={name:"webgl/dataType.md"},s=r('<h2 id="vec" tabindex="-1">Vec <a class="header-anchor" href="#vec" aria-label="Permalink to &quot;Vec&quot;">​</a></h2><h3 id="vec2" tabindex="-1">Vec2 <a class="header-anchor" href="#vec2" aria-label="Permalink to &quot;Vec2&quot;">​</a></h3><p>可以用于保存 2D 纹理坐标。</p><h3 id="vec3" tabindex="-1">Vec3 <a class="header-anchor" href="#vec3" aria-label="Permalink to &quot;Vec3&quot;">​</a></h3><p>是一个三维浮点数数组。</p><h3 id="vec4" tabindex="-1">Vec4 <a class="header-anchor" href="#vec4" aria-label="Permalink to &quot;Vec4&quot;">​</a></h3><p>用于保存颜色数据。<br> gl_Positon 是用 vec4，因为是齐次坐标。</p><h2 id="取样器" tabindex="-1">取样器 <a class="header-anchor" href="#取样器" aria-label="Permalink to &quot;取样器&quot;">​</a></h2><h3 id="sampler2d" tabindex="-1">sampler2D <a class="header-anchor" href="#sampler2d" aria-label="Permalink to &quot;sampler2D&quot;">​</a></h3><p>WebGL 在处理图片纹理编写片元着色器的时候，会通过 sampler2D 关键字声明一个纹理相关的变量，sampler2D 和 vec2、float 表示一种数据类型，只不过 sampler2D 关键字声明的变量表示一种取样器类型变量，简单点说就是该变量对应纹理图片的像素数据。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uniform sampler2D u_Sampler;</span></span></code></pre></div><h2 id="向量相关信息" tabindex="-1">向量相关信息 <a class="header-anchor" href="#向量相关信息" aria-label="Permalink to &quot;向量相关信息&quot;">​</a></h2><p>向量类型的变量互相转换，比如 viewLight 是一个 vec4 类型，如果将它前三个维度给一个 vec3 类型，就可以写成：viewLight.xyz。<br> 同时，打乱顺序也是可以的，也就是说，viewLight.zx 能将第三个维度和第一个维度赋值给一个 vec2 类型。</p>',13),c=[s];function l(o,h,n,d,p,_){return t(),e("div",null,c)}const b=a(i,[["render",l]]);export{u as __pageData,b as default};
