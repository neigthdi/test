import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.BU6oPMi8.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"events/register.md","filePath":"events/register.md"}'),t={name:"events/register.md"},p=n(`<h2 id="触发器" tabindex="-1">触发器 <a class="header-anchor" href="#触发器" aria-label="Permalink to &quot;触发器&quot;">​</a></h2><p>Action 是在场景中添加模型交互的一种简单方式。触发器触发需要指定一个动作触发。<br> 例如，可以指定用户单击（或者触摸）模型时，触发回调。<br> 要使用 Action，必须实例化 BABYLON.ActionManager 并添加给模型或场景。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActionManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>创建 ActionManager 后，可以注册触发事件：<br> 在触发模型单击后，一秒后将 light 的 diffuse 设置为黑色。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterpolateValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnPickTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    light,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;diffuse&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Color3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>还可以实现链式操作：<br> 第一次单击将光的颜色设置为黑色，第二次单击将模型的材质的网格设置为 false。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterpolateValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnPickTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      light,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;diffuse&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Color3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.NothingTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mesh.material,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;wireframe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span></code></pre></div><p>还可以增加判断。如果判断结果为 true，则会触发相关事件： camera.alpha 只有在 light.diffuse 的值等于红色时，才会在 500 毫秒设置为 0。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterpolateValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnPickTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    camera,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;alpha&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PredicateCondition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh.actionManager, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> light.diffuse.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Color3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>模型有 14 种不同的触发器，场景有三种。<br> 可用于模型的触发器有：<br> BABYLON.ActionManager.（&lt;---前缀）<br>  NothingTrigger：无法触发，只用于具有 action.then 功能的子操作。<br>  OnPickTrigger：当用户触摸/点击网格时触发。<br>  OnDoublePickTrigger：当用户双击/点击网格时触发。<br>  OnPickDownTrigger：当用户触摸/点击网格时触发。<br>  OnPickUpTrigger：当用户触摸/点击网格时触发。<br>  OnPickOutTrigger：当用户触摸/点击网格然后离开网格时触发。<br>  OnLeftPickTrigger：当用户使用左键触摸/点击网格时触发。<br>  OnRightPickTrigger：当用户使用右键触摸/点击网格时触发。<br>  OnCenterPickTrigger：当用户触摸/点击带有中心按钮的网格时触发。<br>  OnLongPressTrigger：当用户长时间触摸/点击网格时触发。<br>  OnPointerOverTrigger：当指针在网格上时触发。只触发一次。<br>  OnPointerOutTrigger：当指针不再位于网格上时触发。只触发一次。<br>  OnIntersectionEnterTrigger：当网格与特定网格交叉时触发。只触发一次。<br>  OnIntersectionExitTrigger：当网格不再与特定网格交叉时触发。只触发一次。</p><h4 id="请注意-两个模型交叉触发器需要指定相关模型-例如" tabindex="-1">请注意，两个模型交叉触发器需要指定相关模型，例如： <a class="header-anchor" href="#请注意-两个模型交叉触发器需要指定相关模型-例如" aria-label="Permalink to &quot;请注意，两个模型交叉触发器需要指定相关模型，例如：&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      trigger: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnIntersectionEnterTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parameter: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mesh: otherMesh,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        usePreciseIntersection: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mesh,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;scaling&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vector3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>请注意可选的 usePreciseIntersection 属性。如果不想计算精确交叉，只需要将目标模型作为值即可：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      trigger: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnIntersectionEnterTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parameter: otherMesh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mesh,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;scaling&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vector3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>可用于场景的触发器有：<br> BABYLON.ActionManager.（&lt;---前缀）<br>  BABYLON.ActionManager.OnEveryFrameTrigger：每帧触发一次。<br>  BABYLON.ActionManager.OnKeyDownTrigger：按下某个键时触发。<br>  BABYLON.ActionManager.OnKeyUpTrigger：抬起某个键时触发。<br> OnKeyUpTrigger 和 OnKeyDownTrigger 触发器都接受一个字符串参数值，事件触发会判断该值是否与 sourceEvent.key 值是否相同。<br> 这允许创建仅在某些键位才会触发的事件，如下所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.actionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecuteCodeAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      trigger: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnKeyUpTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parameter: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;r&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;按下了r键&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="网格可实现的操作" tabindex="-1">网格可实现的操作 <a class="header-anchor" href="#网格可实现的操作" aria-label="Permalink to &quot;网格可实现的操作&quot;">​</a></h2><p>大多数操作都需要一个 propertyPath 值，该值是字符串类型用于定义操作修改模型的属性的路径。<br> 可以设置 position 或 diffuse 值，也可以提供更复杂的路径比如 position.x 等其他。<br> BABYLON.（&lt;---前缀）</p><p> SwitchBooleanAction(trigger, target, propertyPath, condition)：切换布尔属性。</p><p> SetValueAction(trigger, target, propertyPath, value, condition)：设置属性的直接值。</p><p> IncrementValueAction(trigger, target, propertyPath, value, condition)：将数字添加到数字属性。</p><p> PlayAnimationAction(trigger, target, from, to, loop, condition)：在目标上播放动画。</p><p> StopAnimationAction(trigger, target, condition)：停止目标正在播放的任何动画。</p><p> DoNothingAction(trigger, condition)： 没做什么。</p><p> CombineAction(trigger, children[], condition)：同时执行多个操作。children 属性必须是一系列操作。</p><p> ExecuteCodeAction(trigger, func, condition)：执行函数触发。</p><p> SetParentAction(trigger, target, parent, condition)：设置目标的父级。</p><p> PlaySoundAction(trigger, sound, condition)：播放给定的声音。</p><p> StopSoundAction(trigger, sound, condition)：停止给定的声音。</p><p> InterpolateValueActiontrigger, target, propertyPath, value, duration, condition, stopOtherAnimations)：创建动画以将属性的当前值插入给定目标。支持以下类型：<br>    ● number<br>    ● BABYLON.Color3<br>    ● BABYLON.Vector3<br>    ● BABYLON.Quaternion</p><h2 id="conditions-限制条件" tabindex="-1">Conditions 限制条件 <a class="header-anchor" href="#conditions-限制条件" aria-label="Permalink to &quot;Conditions 限制条件&quot;">​</a></h2><p>限制条件属性的设置有三种：<br> BABYLON.（&lt;---前缀）<br>  ValueCondition(actionManager, target, propertyPath, value, operator)：当给定的属性 propertyPath 和值 value 符合运算符 operator 时达到触发条件。支持以下运算符：<br>    ● BABYLON.ValueCondition.IsEqual<br>    ● BABYLON.ValueCondition.IsDifferent<br>    ● BABYLON.ValueCondition.IsGreater<br>    ● BABYLON.ValueCondition.IsLesser<br>  PredicateCondition(actionManager, predicate)：当给定的函数 predicate 返回 true 时，则达到触发条件。<br>  StateCondition(actionManager, target, value)：当目标的属性 target 与给定值 value 相同时，则达到触发条件。</p><h2 id="实现一个动作" tabindex="-1">实现一个动作 <a class="header-anchor" href="#实现一个动作" aria-label="Permalink to &quot;实现一个动作&quot;">​</a></h2><p>比如点击网格时，需要隐藏模型。<br> 首先，将向相关模型添加一个 BABYLON.ActionManager。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActionManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>其次，将注册与 BABYLON.ActionManager.OnPickTrigger 触发器关联的操作。此操作会将 mesh.visibility 属性插值为 0.2。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterpolateValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnPickTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mesh,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;visibility&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>如果在淡出网格后，希望它重新淡入，可以通过链式操作将 mesh.visibility 属性恢复为默认值来实现。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.actionManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterpolateValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnPickTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mesh,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;visibility&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterpolateValueAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      BABYLON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ActionManager.OnPickTrigger,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      mesh,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;visibility&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span></code></pre></div><h2 id="精灵" tabindex="-1">精灵 <a class="header-anchor" href="#精灵" aria-label="Permalink to &quot;精灵&quot;">​</a></h2><p>精灵有一个动作管理器。<br> 请注意，精灵的动作管理器 SpriteManager 必须通过设置属性 spriteManager.isPickable = true， sprite.isPickable = false / true（默认为 False） 来启动精灵的拾取支持。</p>`,41),h=[p];function l(e,k,r,E,g,d){return a(),i("div",null,h)}const y=s(t,[["render",l]]);export{o as __pageData,y as default};
