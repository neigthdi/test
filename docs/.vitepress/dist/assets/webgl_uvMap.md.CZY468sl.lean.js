import{_ as s,c as a,o,j as t,a as e}from"./chunks/framework.BB87oCcu.js";const n="/babylonjs/assets/uvmap.gi5JhSei.png",p="/babylonjs/assets/uvmap1.CA2F9GAx.png",_="/babylonjs/assets/uvmap2.HOjHNOyk.png",y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"webgl/uvMap.md","filePath":"webgl/uvMap.md"}'),l={name:"webgl/uvMap.md"},c=t("p",null,[e("UV 是二维纹理坐标，U 代表水平方向，V 代表垂直方向。UV Map 用来描述三维物体表面与图像纹理(Texture) 的映射关系，有了 UV Map，可以将二维的图像纹理粘贴到三维的物体表面。"),t("br"),e(" UV 坐标为纹理坐标，在纹理空间中，任意一个二维坐标都在【0，1】内。")],-1),r=t("p",null,[t("img",{src:n,alt:"image"})],-1),i=t("p",null,"纹理坐标的 U 和 V 的最大值均为 1，每张纹理图 Texture map 的（u，v）坐标均可存储在三维 Mesh 的各个顶点信息中，这个存储操作即为两者之间的映射关系。在 UV 坐标系（或者 UVW 坐标系）中，显示器水平方向是 U（大小 0-1），显示器竖直方向是 V（大小 0-1），（W 的方向垂直于显示器表面）。",-1),u=t("p",null,[t("img",{src:p,alt:"image"})],-1),m=t("p",null,[e("纹理的映射是将纹理图贴到多边形表面的过程。"),t("br"),e(" 映射就是通过（u，v）坐标去查找对应的颜色值，例如下图：")],-1),d=t("p",null,[t("img",{src:_,alt:"image"})],-1),V=t("p",null,"上面的图是一个很简单的示意图，其中（0,0）点和（1,1）点可能根据引擎或者其他的规定，位置会有变化，但是大体来说基本上都是这样的。如果 UV 是（0.1, 0.1）取得颜色值就是绿色，如果 UV 是（0.2, 0.8）取得颜色值就是粉色，如果 UV 是（0.7, 0.2）取得颜色值就是蓝色，如果 UV 是（0.9,0.9） 取得颜色值就是黄色。",-1),g=[c,r,i,u,m,d,V];function h(U,b,v,f,x,M){return o(),a("div",null,g)}const N=s(l,[["render",h]]);export{y as __pageData,N as default};
